{"version":3,"sources":["webpack:///./src/components/Controls.js","webpack:///./src/lib/utils.js","webpack:///./src/components/Sphere.js","webpack:///./src/pages/Spheres.js"],"names":["Controls","props","useThree","gl","camera","ref","useRef","useFrame","current","update","args","domElement","randVelocity","num","Math","random","floor","getRandomInt","min","max","Sphere","meshRef","v","mesh","position","x","y","z","scale","color","shininess","specular","emissive","Spheres","spheres","Array","fill","map","_","i","key","className","to","fov","near","far","look","intensity"],"mappings":"8FAAA,qCAUeA,IAPE,SAACC,GAAW,IAAD,EACFC,cAAhBC,EADkB,EAClBA,GAAIC,EADc,EACdA,OACNC,EAAMC,mBAEZ,OADAC,aAAS,kBAAMF,EAAIG,QAAQC,YACpB,iDAAeJ,IAAKA,EAAKK,KAAM,CAACN,EAAQD,EAAGQ,aAAiBV,M,yECPxDW,EAAe,WAC1B,IAAIC,EAAsB,GAAhBC,KAAKC,SAEf,OADAF,GAAuC,IAAhCC,KAAKE,MAAoB,EAAdF,KAAKC,UAAoB,GAAK,GAIrCE,EAAe,SAACC,EAAKC,GAChC,OAAOL,KAAKE,MAAMF,KAAKC,UAAYI,EAAMD,IAAQA,GCwCpCE,IA3CA,WACb,IAAMC,EAAUf,mBAEVgB,EACDV,IADCU,EAEDV,IAFCU,EAGDV,IAyBL,OApBAL,aAAS,WACP,IAAMgB,EAAOF,EAAQb,QAAQgB,SAE/BD,EAAKE,GAAKH,EACVC,EAAKG,GAAKJ,EACVC,EAAKI,GAAKL,GAEJC,EAAKE,GATG,IASWF,EAAKE,GAThB,MAUVF,EAAKE,GAAKF,EAAKE,IAGbF,EAAKG,GAbG,IAaWH,EAAKG,GAbhB,MAcVH,EAAKG,GAAKH,EAAKG,IAGbH,EAAKI,GAjBG,IAiBWJ,EAAKI,GAjBhB,MAkBVJ,EAAKI,GAAKJ,EAAKI,MAKjB,0BACEtB,IAAKgB,EACLO,MAAO,CAACX,EAAa,GAAK,GAAIA,EAAa,GAAK,GAAIA,EAAa,GAAK,IACtEO,SAAU,CAAC,EAAE,EAAE,IAEf,0CAAsBd,KAAM,CAAC,EAAG,GAAI,MACpC,uCAAmBmB,MAAO,QAAUC,UAAW,IAAKC,SAAU,SAAUC,SAAU,O,8HCbzEC,UAvBC,WACd,IAAMC,EAAU,YAAIC,MAAM,KAAKC,KAAK,OAAOC,KAAI,SAACC,EAAGC,GACjD,OAAO,kBAAC,IAAD,CAAQC,IAAKD,OAGtB,OACE,yBAAKE,UAAU,aACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAGF,kBAAC,IAAD,CAAQtC,OAAQ,CAAEuC,IAAK,GAAIC,KAAM,GAAKC,IAAK,IAAMC,KAAM,CAAC,EAAE,EAAE,GAAItB,SAAU,CAAC,GAAG,GAAG,MAC/E,sCAAkBK,MAAO,SAAUkB,UAAW,EAAGvB,SAAU,CAAC,GAAG,EAAE,MACjE,kCAAcK,MAAO,SAAUkB,UAAW,KACzCb,EACD,kBAAC,IAAD,MACA,gCAAYxB,KAAM,KAClB,gCAAYA,KAAM,CAAC,IAAK","file":"component---src-pages-spheres-js-4cf789224f5f2327b669.js","sourcesContent":["import React, { useRef } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\n\nconst Controls = (props) => {\n  const { gl, camera  } = useThree()\n  const ref = useRef()\n  useFrame(() => ref.current.update())\n  return <orbitControls ref={ref} args={[camera, gl.domElement]} {...props} />\n}\n\nexport default Controls;\n","export const randVelocity = () => {\n  let num = Math.random() * 0.1;\n  num *= Math.floor(Math.random()*2) === 1 ? 1 : -1;\n  return num;\n};\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n\n","import React, { useRef } from \"react\";\nimport { useFrame } from 'react-three-fiber';\nimport { randVelocity, getRandomInt } from '../lib/utils';\n\nconst Sphere = () => {\n  const meshRef = useRef();\n\n  const v = {\n    x: randVelocity(),\n    y: randVelocity(),\n    z: randVelocity()\n  };\n\n  const limit = 50;\n\n  useFrame(() => {\n    const mesh = meshRef.current.position;\n\n\t\tmesh.x += v.x\n\t\tmesh.y += v.y;\n\t\tmesh.z += v.z;\n\n    if (mesh.x >= limit || mesh.x < -limit) {\n      mesh.x = -mesh.x;\n    }\n\n    if (mesh.y >= limit || mesh.y < -limit) {\n      mesh.y = -mesh.y;\n    }\n\n    if (mesh.z >= limit || mesh.z < -limit) {\n      mesh.z = -mesh.z;\n    }\n  });\n\n  return (\n    <mesh\n      ref={meshRef}\n      scale={[getRandomInt(0.5, 1), getRandomInt(0.5, 1), getRandomInt(0.5, 1)]}\n      position={[0,0,0]}\n    >\n      <sphereBufferGeometry args={[1, 32, 32]} />\n      <meshPhongMaterial color={0x41d1ff} shininess={100} specular={0xffe501} emissive={0x0} />\n    </mesh>\n  );\n}\n\nexport default Sphere;\n","import React, { useEffect, useCallback } from 'react';\nimport { Link } from 'gatsby';\nimport { Canvas, extend } from 'react-three-fiber';\nimport Sphere from '../components/Sphere';\nimport Controls from '../components/Controls';\n\nconst Spheres = () => {\n  const spheres = [...Array(500).fill(null)].map((_, i) => {\n    return <Sphere key={i} />\n  });\n\n  return (\n    <div className=\"full-page\">\n      <div className=\"pull-right\">\n        <Link to=\"/\">Home</Link>\n      </div>\n\n      <Canvas camera={{ fov: 75, near: 0.1, far: 1000, look: [0,0,0], position: [40,20,40] }}>\n        <directionalLight color={0xffffff} intensity={1} position={[30,0,30]} />\n        <ambientLight color={0xffffff} intensity={0.2} />\n        {spheres}\n        <Controls />\n        <axesHelper args={50} />\n        <gridHelper args={[100, 15]} />\n      </Canvas>\n    </div>\n  );\n};\n\nexport default Spheres;\n"],"sourceRoot":""}