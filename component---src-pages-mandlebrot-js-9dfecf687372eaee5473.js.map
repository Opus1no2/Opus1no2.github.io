{"version":3,"sources":["webpack:///./src/pages/Mandlebrot.js"],"names":["Mandlebrot","canvasRef","useRef","mandlebrot","realX","imagineY","y","x","iteration","temp","mapToReal","width","min_real","max_real","mapToImagine","height","min_imagine","max_imagine","useEffect","window","innerWidth","innerHeight","canvas","current","ctx","getContext","score","r","g","b","fillStyle","fillRect","className","to","ref","id"],"mappings":"2FAAA,4CA0EeA,UAvEI,WACjB,IAMMC,EAAYC,iBAAO,MAEnBC,EAAa,SAACC,EAAOC,GAMzB,IALA,IAAIC,EAAI,EACJC,EAAI,EACJC,EAAY,EAGPD,EAAIA,EAAMD,EAAIA,GAAO,GAAKE,EAFb,KAEwC,CAC5D,IAAMC,EAAOF,EAAIA,EAAID,EAAIA,EAAIF,EAC7BE,EAAI,EAAIC,EAAID,EAAID,EAChBE,EAAIE,EACJD,IAEF,OAAOA,GAGHE,EAAY,SAACH,EAAGI,EAAOC,EAAUC,GAErC,OAAON,IADOM,EAAWD,GACLD,GAASC,GAGzBE,EAAe,SAACR,EAAGS,EAAQC,EAAaC,GAE5C,OAAOX,IADOW,EAAcD,GACRD,GAAUC,GA8BhC,OA3BAE,qBAAU,WACR,IAAMP,EAAQQ,OAAOC,WACfL,EAASI,OAAOE,YAEhBC,EAASrB,EAAUsB,QACnBC,EAAMF,EAAOG,WAAW,MAE9BH,EAAOX,MAAQA,EACfW,EAAOP,OAASA,EAEhB,IAAK,IAAIT,EAAI,EAAGA,EAAIS,EAAQT,IAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAII,EAAOJ,IAAK,CAC9B,IAAMH,EAAQM,EAAUH,EAAGI,GA7ChB,IACA,GA6CLN,EAAWS,EAAaR,EAAGS,GA3CnB,EACA,GA4CRW,EAAQvB,EAAWC,EAAOC,GAE1BsB,EAAKD,EAAQ,IACbE,EAAKF,EAAQ,IACbG,EAAKH,EAAQ,IAEnBF,EAAIM,UAAJ,OAAuBH,EAAvB,KAA6BC,EAA7B,KAAmCC,EAAnC,IACAL,EAAIO,SAASxB,EAAGD,EAAG,EAAG,MAGzB,EAvDiB,EACA,GAJH,IACA,IA4Df,yBAAK0B,UAAU,mBACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,4BAAQC,IAAKjC,EAAWkC,GAAG,SAASH,UAAU","file":"component---src-pages-mandlebrot-js-9dfecf687372eaee5473.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Link } from 'gatsby';\n\nconst Mandlebrot = () => {\n  const min_real = -2.5\n  const max_real = 1;\n\n  const min_imagine = -1;\n  const max_imagine = 1;\n\n  const canvasRef = useRef(null);\n\n  const mandlebrot = (realX, imagineY) => {\n    let y = 0;\n    let x = 0;\n    let iteration = 0;\n    const max_iteration = 1000;\n\n    while (((x * x) + (y * y)) <= 4 && iteration < max_iteration) {\n      const temp = x * x - y * y + realX;\n      y = 2 * x * y + imagineY;\n      x = temp;\n      iteration++;\n    }\n    return iteration;\n  }\n\n  const mapToReal = (x, width, min_real, max_real) => {\n    const range = max_real - min_real;\n    return x * (range / width) + min_real;\n  }\n\n  const mapToImagine = (y, height, min_imagine, max_imagine) => {\n    const range = max_imagine - min_imagine;\n    return y * (range / height) + min_imagine;\n  }\n\n  useEffect(() => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = width;\n    canvas.height = height;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const realX = mapToReal(x, width, min_real, max_real);\n        const imagineY = mapToImagine(y, height, min_imagine, max_imagine);\n\n        const score = mandlebrot(realX, imagineY);\n\n        const r = (score % 250);\n        const g = (score % 200);\n        const b = (score % 256);\n\n        ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\n        ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }, [min_imagine, max_imagine, min_real, max_real]);\n\n  return (\n    <div className=\"mandlebrot-cont\">\n      <div className=\"pull-right\">\n        <Link to=\"/\">Home</Link>\n      </div>\n      <canvas ref={canvasRef} id=\"canvas\" className=\"full-page\"></canvas>\n    </div>\n  );\n};\n\nexport default Mandlebrot;\n"],"sourceRoot":""}