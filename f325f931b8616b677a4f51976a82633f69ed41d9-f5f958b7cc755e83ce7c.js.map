{"version":3,"sources":["webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack:///./src/components/Controls.js"],"names":["object","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","twoPI","undefined","console","warn","document","error","this","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","tabIndex","prototype","Object","create","constructor","call","extend","OrbitControls","Controls","props","useThree","gl","camera","ref","useRef","useFrame","current","args"],"mappings":"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","file":"f325f931b8616b677a4f51976a82633f69ed41d9-f5f958b7cc755e83ce7c.js","sourcesContent":["import { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from \"../../../build/three.module.js\"; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function OrbitControls(object, domElement) {\n  if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n  if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n  this.object = object;\n  this.domElement = domElement; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n  // Set to false to disable use of the keys\n\n  this.enableKeys = true; // The four arrow keys\n\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN\n  }; // Touch fingers\n\n  this.touches = {\n    ONE: TOUCH.ROTATE,\n    TWO: TOUCH.DOLLY_PAN\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new Vector3(); // so camera.up is the orbit axis\n\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n    var twoPI = 2 * Math.PI;\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      } // restrict theta to be between desired limits\n\n\n      var min = scope.minAzimuthAngle;\n      var max = scope.maxAzimuthAngle;\n\n      if (isFinite(min) && isFinite(max)) {\n        if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n        if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n        if (min < max) {\n          spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n        } else {\n          spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n        }\n      } // restrict phi to be between desired limits\n\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1; // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('pointerdown', onPointerDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, false);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp, false);\n    scope.domElement.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n    var v = new Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyIn(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function handleMouseUp()\n  /*event*/\n  {// no-op\n  }\n\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyIn(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyOut(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateEnd.set(x, y);\n    }\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n  }\n\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n    }\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n    dollyOut(dollyDelta.y);\n    dollyStart.copy(dollyEnd);\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n\n  function handleTouchEnd()\n  /*event*/\n  {// no-op\n  } //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onPointerDown(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onPointerMove(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onPointerUp(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseUp(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onMouseDown(event) {\n    // Prevent the browser from scrolling.\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n    var mouseAction;\n\n    switch (event.button) {\n      case 0:\n        mouseAction = scope.mouseButtons.LEFT;\n        break;\n\n      case 1:\n        mouseAction = scope.mouseButtons.MIDDLE;\n        break;\n\n      case 2:\n        mouseAction = scope.mouseButtons.RIGHT;\n        break;\n\n      default:\n        mouseAction = -1;\n    }\n\n    switch (mouseAction) {\n      case MOUSE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseDownDolly(event);\n        state = STATE.DOLLY;\n        break;\n\n      case MOUSE.ROTATE:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        }\n\n        break;\n\n      case MOUSE.PAN:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        } else {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove, false);\n      scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp, false);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, false);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp, false);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    event.stopPropagation();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n\n          case TOUCH.PAN:\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n            handleTouchStartDollyPan(event);\n            state = STATE.TOUCH_DOLLY_PAN;\n            break;\n\n          case TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n            handleTouchStartDollyRotate(event);\n            state = STATE.TOUCH_DOLLY_ROTATE;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    event.stopPropagation();\n\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n        handleTouchMoveRotate(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n        handleTouchMovePan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchMoveDollyPan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n        handleTouchMoveDollyRotate(event);\n        scope.update();\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  } //\n\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n  scope.domElement.addEventListener('pointerdown', onPointerDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\n  scope.domElement.addEventListener('keydown', onKeyDown, false); // make sure element can receive keys.\n\n  if (scope.domElement.tabIndex === -1) {\n    scope.domElement.tabIndex = 0;\n  } // force an update at start\n\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function MapControls(object, domElement) {\n  OrbitControls.call(this, object, domElement);\n  this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\nexport { OrbitControls, MapControls };","import React, { useRef } from 'react';\nimport { useThree, useFrame, extend } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nextend({ OrbitControls });\n\nconst Controls = (props) => {\n  const { gl, camera  } = useThree()\n  const ref = useRef()\n  useFrame(() => ref.current.update())\n  return <orbitControls ref={ref} args={[camera, gl.domElement]} {...props} />\n}\n\nexport default Controls;\n"],"sourceRoot":""}