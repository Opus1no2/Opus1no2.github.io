{"version":3,"sources":["webpack:///./src/pages/Narcissus.js"],"names":["Cont","styled","div","Video","video","Canvas","canvas","Narcissus","useState","color","setColor","dir","setDir","canvasRef","useRef","videoRef","useEffect","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","addEventListener","play","_id","setInterval","clearInterval","ctx","getContext","width","window","innerWidth","height","innerHeight","fillStyle","fillRect","ref"],"mappings":"41BAGA,IAAMA,EAAOC,IAAOC,IAAV,KAQJC,EAAQF,IAAOG,MAAV,KAYLC,EAASJ,IAAOK,OAAV,KAiEGC,UA1DG,WAAO,IAAD,EACIC,mBAAS,GAA5BC,EADe,KACRC,EADQ,OAEAF,mBAAS,IAAxBG,EAFe,KAEVC,EAFU,KAIhBC,EAAYC,mBACZC,EAAWD,mBA2CjB,OAzCAE,qBAAU,WACRC,UAAUC,aAAaC,aAAa,CAACf,OAAO,IAAOgB,MAAK,SAACC,GACvDN,EAASO,QAAQC,UAAYF,EAC7BN,EAASO,QAAQE,iBAAiB,kBAAkB,WAClDT,EAASO,QAAQG,eAGpB,CAACV,IAEJC,qBAAU,WACR,IAgBIU,EAAMC,aAhBU,WACJ,IAAVlB,GACFG,EAAO,OAEK,MAAVH,GACFG,EAAO,OAGG,QAARD,GACFD,GAAS,SAAAD,GAAK,OAAIA,EAAQ,KAEhB,QAARE,GACFD,GAAS,SAAAD,GAAK,OAAIA,EAAQ,OAIK,KAEnC,OAAO,kBAAMmB,cAAcF,MAC1B,CAACjB,EAAOE,IAEXK,qBAAU,WACR,IAAMV,EAASO,EAAUS,QACnBO,EAAMvB,EAAOwB,WAAW,MAC9BxB,EAAOyB,MAAQC,OAAOC,WACtB3B,EAAO4B,OAASF,OAAOG,YAEvBN,EAAIO,UAAJ,OAAuB3B,EAAvB,eACAoB,EAAIQ,SAAS,EAAG,EAAG/B,EAAOyB,MAAOzB,EAAO4B,UACvC,CAACzB,IAGF,oCACE,kBAACT,EAAD,KACE,kBAACK,EAAD,CAAQiC,IAAKzB,IACb,kBAACV,EAAD,CAAOmC,IAAKvB","file":"component---src-pages-narcissus-js-de816c23c640749ce9ec.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Cont = styled.div`\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  `;\n\nconst Video = styled.video`\n    transform: scaleX(-1);\n    border-radius: 80px;\n    border: solid 10px #609e1c;\n    box-shadow:\n      0 0 0 10px hsl(20, 100%, 50%),\n      0 0 0 15px hsl(50, 100%, 60%),\n      0 0 0 20px hsl(10, 100%, 70%),\n      0 0 0 25px hsl(200, 100%, 80%),\n      0 0 0 30px hsl(150, 100%, 90%);\n  `;\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\nconst Narcissus = () => {\n  const [color, setColor] = useState(0);\n  const [dir, setDir] = useState('');\n\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({video: true}).then((stream) => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.addEventListener('loadedmetadata', () => {\n        videoRef.current.play();\n      });\n    });\n  }, [videoRef]);\n\n  useEffect(() => {\n    const changeColor = () => {\n      if (color === 0) {\n        setDir('inc');\n      }\n      if (color === 255) {\n        setDir('dec');\n      }\n\n      if (dir === 'inc') {\n        setColor(color => color + 1);\n      }\n      if (dir === 'dec') {\n        setColor(color => color - 1);\n      }\n    };\n\n    let _id = setInterval(changeColor, 100);\n\n    return () => clearInterval(_id);\n  }, [color, dir]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    ctx.fillStyle = `hsl(${color}, 100%, 25%)`;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }, [color]);\n\n  return (\n    <>\n      <Cont>\n        <Canvas ref={canvasRef} />\n        <Video ref={videoRef}></Video>\n      </Cont>\n    </>\n  );\n};\n\nexport default Narcissus;\n"],"sourceRoot":""}