{"version":3,"sources":["webpack:///./src/components/Controls.js","webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js"],"names":["Controls","props","useThree","gl","camera","ref","useRef","useFrame","current","update","args","domElement","OrbitControls","object","offset","quat","quatInverse","lastPosition","lastQuaternion","twoPI","undefined","console","warn","document","error","this","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","tabIndex","prototype","Object","create","constructor","MapControls","call"],"mappings":"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","file":"da55e3a974a6293f62e73c24c313f76a8d416abc-0ed7f6ce73952d960167.js","sourcesContent":["import React, { useRef } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\n\nconst Controls = (props) => {\n  const { gl, camera  } = useThree()\n  const ref = useRef()\n  useFrame(() => ref.current.update())\n  return <orbitControls ref={ref} args={[camera, gl.domElement]} {...props} />\n}\n\nexport default Controls;\n","import { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from \"../../../build/three.module.js\"; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function OrbitControls(object, domElement) {\n  if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n  if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n  this.object = object;\n  this.domElement = domElement; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n  // Set to false to disable use of the keys\n\n  this.enableKeys = true; // The four arrow keys\n\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN\n  }; // Touch fingers\n\n  this.touches = {\n    ONE: TOUCH.ROTATE,\n    TWO: TOUCH.DOLLY_PAN\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new Vector3(); // so camera.up is the orbit axis\n\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n    var twoPI = 2 * Math.PI;\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      } // restrict theta to be between desired limits\n\n\n      var min = scope.minAzimuthAngle;\n      var max = scope.maxAzimuthAngle;\n\n      if (isFinite(min) && isFinite(max)) {\n        if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n        if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n        if (min < max) {\n          spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n        } else {\n          spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n        }\n      } // restrict phi to be between desired limits\n\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1; // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('pointerdown', onPointerDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, false);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp, false);\n    scope.domElement.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n    var v = new Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyIn(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function handleMouseUp()\n  /*event*/\n  {// no-op\n  }\n\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyIn(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyOut(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateEnd.set(x, y);\n    }\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n  }\n\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n    }\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n    dollyOut(dollyDelta.y);\n    dollyStart.copy(dollyEnd);\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n\n  function handleTouchEnd()\n  /*event*/\n  {// no-op\n  } //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onPointerDown(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseDown(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onPointerMove(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseMove(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onPointerUp(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        onMouseUp(event);\n        break;\n      // TODO touch\n    }\n  }\n\n  function onMouseDown(event) {\n    // Prevent the browser from scrolling.\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n    var mouseAction;\n\n    switch (event.button) {\n      case 0:\n        mouseAction = scope.mouseButtons.LEFT;\n        break;\n\n      case 1:\n        mouseAction = scope.mouseButtons.MIDDLE;\n        break;\n\n      case 2:\n        mouseAction = scope.mouseButtons.RIGHT;\n        break;\n\n      default:\n        mouseAction = -1;\n    }\n\n    switch (mouseAction) {\n      case MOUSE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseDownDolly(event);\n        state = STATE.DOLLY;\n        break;\n\n      case MOUSE.ROTATE:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        }\n\n        break;\n\n      case MOUSE.PAN:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        } else {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove, false);\n      scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp, false);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, false);\n    scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp, false);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    event.stopPropagation();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n\n          case TOUCH.PAN:\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n            handleTouchStartDollyPan(event);\n            state = STATE.TOUCH_DOLLY_PAN;\n            break;\n\n          case TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n            handleTouchStartDollyRotate(event);\n            state = STATE.TOUCH_DOLLY_ROTATE;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault(); // prevent scrolling\n\n    event.stopPropagation();\n\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n        handleTouchMoveRotate(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n        handleTouchMovePan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchMoveDollyPan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n        handleTouchMoveDollyRotate(event);\n        scope.update();\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  } //\n\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n  scope.domElement.addEventListener('pointerdown', onPointerDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\n  scope.domElement.addEventListener('keydown', onKeyDown, false); // make sure element can receive keys.\n\n  if (scope.domElement.tabIndex === -1) {\n    scope.domElement.tabIndex = 0;\n  } // force an update at start\n\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function MapControls(object, domElement) {\n  OrbitControls.call(this, object, domElement);\n  this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\nexport { OrbitControls, MapControls };"],"sourceRoot":""}